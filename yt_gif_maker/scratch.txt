
# if clip_button_val:
#     transcript, timestamped_words = transcribe(video_file_path=temporary_video_location, model=model_selection)
#     closest_time_ranges = get_nearest_snippets(input_phrase, transcript, timestamped_words)

#     output_clip_path = temporary_video_location[:-4] + "_clip_1.mp4"
#     output_gif_path = temporary_video_location[:-4] + "_clip_1.gif"
#     start_ms = closest_time_ranges[0][0]
#     end_ms = closest_time_ranges[0][1]
#     clip_video_and_gif(temporary_video_location, output_clip_path, output_gif_path, start_ms, end_ms)

#     with col0.container(border=True):
#         st.text_area(
#             value=transcript.strip(),
#             placeholder="transcribe text will be shown here",
#             label="transcribe text",
#         )

#     c00, c01, c02 = st.columns([8, 8, 8])
#     filename = open(output_clip_path, "rb")
#     byte_file = io.BytesIO(filename.read())
#     with open(output_clip_path, "wb") as out:
#         out.write(byte_file.read())
#         with c00:
#             with st.container(border=True):
#                 st.caption("clip 1 video")
#                 st.video(output_clip_path)
#             out.close()

#     filename = open(output_gif_path, "rb")
#     byte_file = io.BytesIO(filename.read())
#     with open(temporary_video_location, "wb") as out:
#         out.write(byte_file.read())
#         with c01:
#             with st.container(border=True):
#                 st.caption("clip 1 gif")
#                 st.image(output_gif_path)
#             out.close()

#             with open(output_gif_path, "rb") as file:
#                 st.download_button(label="Download gif", data=file, file_name="clip_1.gif", mime="image/gif")

#                 # file_ = open(output_gif_path, "rb")
#                 # contents = file_.read()
#                 # data_url = base64.b64encode(contents).decode("utf-8")
#                 # file_.close()
#                 # st.markdown(
#                 #     f'<img src="data:image/gif;base64,{data_url}" alt="clip 1 gif">',
#                 #     unsafe_allow_html=True,
#                 # )

#             out.close()